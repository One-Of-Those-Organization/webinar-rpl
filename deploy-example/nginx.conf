worker_processes 1;

events {
	worker_connections 1024;
}

http {
	types_hash_max_size 2048;
	types_hash_bucket_size 128;
	include       mime.types;
	default_type  application/octet-stream;
	limit_req_zone $binary_remote_addr zone=api_limit:2m rate=10r/m;
	client_max_body_size 100M;

	server {
		listen 80;
		listen [::]:80;
		client_max_body_size 100M;

		if ($http_user_agent = "") {
			return 403;
		}

		# Static frontend
		location / {
			root /srv/http/webinar-rpl/dist;
			index index.html;
			try_files $uri $uri/ /index.html;
		}

		# API backend with rate limiting
		location /api/ {
#			limit_req zone=api_limit burst=500 nodelay;

			rewrite ^/api/api(/.*)$ $1 break;
			proxy_pass http://localhost:3000;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		location /static/ {
			rewrite ^/static/static(/.*)$ $1 break;
			proxy_pass http://localhost:3000;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}
	}
}
